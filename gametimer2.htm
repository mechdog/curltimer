<!DOCTYPE html>
<html lang="en">
<head>
<meta charset=utf-8>
<title>gametimer2</title>

<script src="buzz.js"></script>
<script type="text/javascript">

function isDefined(x) {
    return (typeof(window[x]) == 'undefined')? false : true;
    }

///////////////////////////////////////////////////////////////////////////////
//  Adjust the default values below according to your needs
//  Chesapeake Curling Club counts UP, to 1:50 and warns at 10 minutes
//  Pittsburgh Curling Club counts Down, starting at 1:50, warns at 10 minutes
///////////////////////////////////////////////////////////////////////////////
var defaultClubName	= "Chesapeake Curling Club";
var defaultHrs = 0;         // playing time
var defaultMin = 2;         // playing time
var defaultSec = 0;         // testing use only
var defaultWarnMin = 1;     // screen changes color x minutes before the deadline
var defaultUpDn = 0;        // 0 counts down to zero, 1 counts up to whatever.

var defaultSmallSecs = 1;   // Seconds reduced in size?  change to "0" for "no"
var defaultFontSize = 350;  // how many pixels big is your countdown clock font?
                            // play with it and choose the size that fits your screen best
var showOtCounter = 1;      // show the overtime counter after the screen turns red?  "0" is "no, do not show it".

var autoStart = 0;          // 1 says bypass the form, take all defaults, and just start the timer.
                            // 0 says you're gonna see the form no matter what.
var autoClose = 0;          // minutes until we attempt to close the window after it goes red. (zero says do not close)
                            // this is problematic in firefox and will not work unless you have manually
                            // changed about:config  "dom.allow_scripts_to_close_windows" to "true" via double-click
                            // At least 25 minutes is recommended in case of an extra end.

// Most people will not need to adjust the following variables, but feel free!
var defaultBGColor          = 'palegreen';  //  or use hex color 98fb98
var defaultBGColorAtZero    = 'red';        //  or use hex color ff0000
var defaultBGWarnColor      = 'yellow';     //  or use hex color ffff00

// sound variables follow:
var tryToPlaySound = 1;     //  1 says try for sound, use buzz.js library. It may not be there
                            //  0 says don't ever try and remove sound options from the form.
var defaultSoundOnOff = 1;  //  1 is on, 0 (zero) is off (can change at run time)
var defaultVolume = 95;     //  1 to 100, buzz.js defaults to 80

if ( (tryToPlaySound) && (isDefined("buzz")) ) {
var mySoundStart = new buzz.sound( "./sounds/firstcall", {      // play when timer starts
    formats: [ "ogg", "mp3", "wav" ]
    });
var mySoundWarn = new buzz.sound( "./sounds/fanfare2", {        // play when screen goes yellow
    formats: [ "ogg", "mp3", "wav" ]
    });
var mySoundEnd = new buzz.sound( "./sounds/whah_whah", {        // play all done and screen goes red
    formats: [ "ogg", "mp3", "wav" ]
    });
var mySoundTestVol = new buzz.sound( "./sounds/aoogah", {       // play when testing on config page
    formats: [ "ogg", "mp3", "wav" ]
    });
var mySoundSilence = new buzz.sound( "./sounds/silence", {      // play when changing color w/o alarm
    formats: [ "ogg", "mp3", "wav" ]
    });
}

///////////////////////////////////////////////////////////////////////////////
//  End of the defaults. You probably will not need to change code below here,
//  but feel free to customize and improve! PLEASE let me know what you changed?
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//  Credits:
//
//  Written by Howard Griffin, January 2012, for the Chesapeake Curling Club
//  sweephard at gmail dot com
//  parsing of arguments, code and comments based on:
//  http://forums.devshed.com/javascript-development-115/reading-url-passed-variables-in-javascript-41596.html
//
//  Based in part by an idea and script by Sandeep Gangadharan
//  www.sivamdesign.com/scripts/    although none of his code remains it was my starting point
//
//  Sound management is done with a javascript library from:
//  http://buzz.jaysalvat.com/
//
//  window size code references
//  http://www.javascriptkit.com/javatutors/static2.shtml
//
//  game timer versions:
//  ver 2.0  - added sounds, January 2013. for IE it requires the doctype statement.
//  ver 2.1  - added volume controls, reset and set focus on the first field, so "enter" may be pressed
//  ver 2.2  - added html tags to conform to current standards for internationalization
//  ver 2.3  - added opton to show seconds reduced in size, allowing for much larger text on the screen
//  ver 2.3a - added auto start and auto close options, added (optional) line showing overtime counter
//  ver 2.3b - removed tabs, replaced with spaces so people using notepad can see what they are dong

var version = "2.3b";    // this version

//  On an old P3 1000, it looses (nuts) about 6 seconds in an hour.
//  On a P4 dual core 1.7 ghz processor it looses nothing.
//  Use at your own discretion, it's for timing games, not rocket launches.
//
//  Known issues!
//  If you click the "Resume" button multiple times, the function runs multiple times
//  and of course the timing is completely off (way way too fast). That could be good for testing,
//  so we'll deny that it's a bug and call it a "feature".
//  Just pause and resume once to go back to regular timing.
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//  generic internal variables
///////////////////////////////////////////////////////////////////////////////
var allValidParms = 0;
var keepGoing=1;
var checkDn;
var checkUp;
var upSec = 0;  // used in the countUp function
var upMin = 0;
var upHrs = 0;
var s2 = 0;     // used in the overtime counter
var m2 = 0;
var h2 = 0;
var curTime = 0;
var maxWarn = 0;
var soundWillPlay = 0;

///////////////////////////////////////////////////////////////////////////////
//  fudge factor for slow computers. How many seconds does it LOSE in one hour?
//  If you time one hour and the timer shows 0:06 seconds left, the secondsSlow is 6.
//  The secondsSlow is 0 for normal computers,
//  which calculates to a delay (sleep) of 1000 = 1 second.
//  If it runs fast (hahaha) negative numbers are permitted if it gains time.
///////////////////////////////////////////////////////////////////////////////
var secondsSlow = 0;    // how many seconds does it lose in one hour?
var delay = Math.floor( (1000*60*60 - secondsSlow*1000)/(60*60) );

// browser dependent code for placing the timer centered on the screen
var vertSpace = 0;
if (window.innerWidth) //if browser supports window.innerWidth such as firefox
    vertSpace = window.innerHeight;//  - 20;
else if (document.all) //else if browser supports document.all (IE 4+)
    vertSpace = document.documentElement.offsetHeight; // - 40;


///////////////////////////////////////////////////////////////////////////////
//  Start of function definitions ( isDefined(x) is with default sound values )
///////////////////////////////////////////////////////////////////////////////
function isset(x) {
    var returnStatus = false;                   // assume not set
    if (typeof(window[x]) != 'undefined') {     // ok it's defined now see if it is set
        if (x != null) returnStatus = true;     // eureka value is set
        }
    return returnStatus;
    }

function isGoodNumber(x) {  // for input validation, make sure it's a positive integer
    if (x < 0) return 0;
    return Math.ceil(x) == Math.floor(x);
    }

function changeBGC(color,soundToPlay){
    document.bgColor = color;
    if (soundWillPlay) {
        if (soundToPlay == 0) mySoundSilence.play();
        if (soundToPlay == 1) mySoundStart.play().setVolume(soundVol);
        if (soundToPlay == 2) mySoundWarn.play().setVolume(soundVol);
        if (soundToPlay == 3) mySoundEnd.play().setVolume(soundVol);
        }
    }

function closeMe() {    // attempt to close the browser window
    // these two work in most browsers, but NOT in firefox (ARRGGHHHHHH)
    window.open('', '_self', '');window.close();
    window.open('javascript:window.open("", "_self", "");window.close();', '_self');

    // the following work, but prompt for permission to close the window, so not a good solution
    // window.opener=window;window.close();
    // window.opener=top;window.close();
    // this.focus();self.opener=this;self.close();

    // finally try a helper window, which works, but still has restrictions just like above
    // AND needs a second .htm file with code like the first two that actually work
    // window.open("closer.htm", '_self');
    }

function otTimer() {
    s2++;
    if (s2 > 59) { s2 = 0; m2++; }
    if (m2 > 59) { m2 = 0; h2++; }

    // update the overtime display clock
    time2 = (h2<1 ? "" : h2 + ":") + (m2<=9 ? "0" + m2 : m2) + ":" + (s2<=9 ? "0" + s2 : s2);

    // push the overtime display to the display page
    if (document.getElementById) { document.getElementById('theTime2').innerHTML = time2; }
    }

function shouldBeDone(xmins,showOT) {
    if (showOT) setInterval(function(){otTimer()},1000);    // update overtime clock every second

    if (xmins !== 0) {		// wait, then call closeMe, other processing continues
        setTimeout(closeMe,xmins*1000*60);
        }
    }

function hasTouch() {
    return (typeof Touch == "object");
    }

function startOver() {
    var youAreSure = confirm("Do you really want to reset everyting to the defaults \n\nand \n\nstart completely over?");
    if (youAreSure) {
        var currURL=window.location.href;   // the full url including ? and all following arguments
        var to=currURL.indexOf("?");
        if (to < 0) {to = currURL.length};  // if -1 is returned then the string was not found, use the full current url instead
        var newURL=currURL.substr(0,to);
        newURL=newURL+"?form_autoStart=0";  // tells us you want to use the form and start over
        window.location.replace(newURL);
        }
    }

function startOverNoWarning() {             // reset has issues with two forms, this reloads the page
    var currURL=window.location.href;       // the full url including ? and all following arguments
    var to=currURL.indexOf("?");
    if (to < 0) {to = currURL.length};      // if -1 is returned then the string was not found,
    var newURL=currURL.substr(0,to);        //   use the full current url instead
    newURL=newURL+"?form_autoStart=0";      // tells us you want to use the form and start over
    window.location.replace(newURL);
    }

function countDown() {
    if (keepGoing) {
        sec--;
        if ((sec < 0) && ((min>0) || (hrs>0)) ) {
            sec = 59;
            min = min - 1;
            curTime = sec*1 + min*60 + hrs*3600;
            if (curTime == (warn*60-1)) changeBGC(defaultBGWarnColor,2);
            }
        if (min < 0 && hrs>0) {
            min = 59;
            hrs = hrs -1;
            }
        if (hrs < 0) { hrs = 0; min = 0; sec = 0; }
        if (sec < 0) sec = 0;		// avoids showing NaN when you are done

        // update the clock
        if (sec<=9) { sec = "0" + sec; }
        if (smallSecs == 1) {
            time  = (hrs<1 ? "0:" : hrs + ":") + (min<=9 ? "0" + min : min);
            time  = time + "<span class=\"timeClass2\">:" + sec + "</span>";
            }
        else time = (hrs<1 ? "0:" : hrs + ":") + (min<=9 ? "0" + min : min) + ":" + sec;

        // push the time to the display page
        if (document.getElementById) { document.getElementById('theTime').innerHTML = time; }

        // sleep unless you are done
        SD=window.setTimeout("countDown();", delay);
        if (hrs == 0 && min == 0 && sec == 0) {
            window.clearTimeout(SD);
            changeBGC(defaultBGColorAtZero,3);
            shouldBeDone(autoClose,showOtCounter);
            }
        }   // end of if keepGoing
    }       // end of countDown function

function countUp() {
    if (keepGoing) {
        upSec++;
        if (upSec > 59) {
            upSec = 0;
            upMin++;
            }
        if (upMin > 59) {
            upMin = 0;
            upHrs++;
            }

        curTime = upSec*1 + upMin*60 + upHrs*3600;
        if (curTime == maxWarn) changeBGC(defaultBGWarnColor,2);

        // update the clock
        if (upSec<=9) { upSec = "0" + upSec; }
        if (smallSecs == 1) {
            time  = (upHrs<1 ? "0:" : upHrs + ":") + (upMin<=9 ? "0" + upMin : upMin);
            time  = time + "<span class=\"timeClass2\">:" + upSec + "</span>";
            }
        else time = (upHrs<1 ? "" : upHrs + ":") + (upMin<=9 ? "0" + upMin : upMin) + ":" + upSec;

        // push the time to the display page
        if (document.getElementById) { document.getElementById('theTime').innerHTML = time; }

        // sleep unless you are done
        SD=window.setTimeout("countUp();", delay);
        if (curTime >= maxTime) {
            window.clearTimeout(SD);
            changeBGC(defaultBGColorAtZero,3);
            shouldBeDone(autoClose,showOtCounter);
            }
        }   // end of if keepGoing
    }       // end of countUp function

///////////////////////////////////////////////////////////////////////////////
//  end of functins, now the logic...
//  Process the arguments supplied via the url (get) into a global array
//  that will hold the value of each variable keyed by the name of the variable.
///////////////////////////////////////////////////////////////////////////////
var GETDATA = new Array();

var sGet = window.location.search;	// Get the string that follows the "?" in the windows location.
if (sGet) {	// if has a value...
    sGet = sGet.substr(1);	// Drop the leading "?"

    // Generate a string array of the name value pairs.
    // Each array element will have the form "foo=bar"
    var sNVPairs = sGet.split("&");

    // Now, for each name-value pair, we need to extract the name and value.
    for (var i = 0; i < sNVPairs.length; i++) {
        // So, sNVPairs[i] contains the current element...
        // Split it at the equals sign.
        var sNV = sNVPairs[i].split("=");

        // Assign the pair to the GETDATA array.
        var sName = sNV[0];
        var sValue = sNV[1];
        GETDATA[sName] = sValue;
        }
    }

///////////////////////////////////////////////////////////////////////////////
//  Assign the argument values to variables,
//  specific for each one to help minimize url hacking
///////////////////////////////////////////////////////////////////////////////
var whichButton  = GETDATA["form_whichButton"];
var hrs          = GETDATA["form_hrs"];
var min          = GETDATA["form_min"];
var sec          = GETDATA["form_sec"];
var warn         = GETDATA["form_warnMin"];
var UpDn         = GETDATA["form_updn"];
var startUpH     = GETDATA["form_startUpHrs"];
var startUpM     = GETDATA["form_startUpMin"];
var smallSecs    = GETDATA["form_smallSecs"];
var theFontSize  = GETDATA["form_fontSZ"];
var theFontSize2 = theFontSize * 0.25;      // for small secs
var theFontSize3 = theFontSize * 0.25;      // for overtime (2nd row) counter

var soundOnOff   = GETDATA["form_sound"];
var soundVol     = GETDATA["form_volume"];
var testVol      = GETDATA["form_test_volume"];

if ( GETDATA["form_autoStart"] == 0 ) {		// allows you to "start over" and specify your own choices
    autoStart = 0;
    }

///////////////////////////////////////////////////////////////////////////////
//  If you are going to do an autostart, no arguments will be passed,
//  or they will be ignored, so take all the defaults and start the timer.
///////////////////////////////////////////////////////////////////////////////
if (autoStart) {
    hrs          = defaultHrs;
    min          = defaultMin;
    sec          = defaultSec;
    warn         = defaultWarnMin;
    UpDn         = defaultUpDn;
    startUpH     = 0;
    startUpM     = 0;
    smallSecs    = defaultSmallSecs;
    theFontSize  = defaultFontSize;
    theFontSize2 = theFontSize * 0.25;       // small secs
    theFontSize3 = theFontSize * 0.25;       // overtime counter
    soundOnOff   = defaultSoundOnOff;
    soundVol     = defaultVolume;
    whichButton  = "Start+the+Timer";
    }

///////////////////////////////////////////////////////////////////////////////
//  decide if sound is going to play or not
///////////////////////////////////////////////////////////////////////////////
if ( (tryToPlaySound) && (soundOnOff) ) {   // check default intent AND run-time choice
    if (isDefined("buzz")) {                // is buzz present?
        if (buzz.isSupported()) {           // is it supported in this browser?
            soundWillPlay = 1;              // if so, it should work
            }
        }
    }
else soundWillPlay = 0;                     // do not even try to play sound

///////////////////////////////////////////////////////////////////////////////
//  Now that you have their input, is it valid?
//  Better yet, does it make sense?
///////////////////////////////////////////////////////////////////////////////
if (warn > 59) warn="badChoice";
allValidParms = ( isGoodNumber(hrs) && isGoodNumber(min) && isGoodNumber(sec) && isGoodNumber(warn) );
allValidParms = ( allValidParms && isGoodNumber(UpDn) && isGoodNumber(startUpH) && isGoodNumber(startUpM) );
allValidParms = ( allValidParms && isGoodNumber(smallSecs) && isGoodNumber(theFontSize) );
// The text on the buttons is assumed to be OK since you can't (without hacking) change it
// The sound arguments can't be tested if sound is not available, so we test them separately below

if (soundVol > 100) soundVol = 100;
if (soundVol < 0)   soundVol = 0;


if (soundWillPlay) {
    allValidParms = ( allValidParms && isGoodNumber(soundOnOff) && isGoodNumber(soundVol) );
    allValidParms = ( allValidParms && isGoodNumber(testVol) );
    }

if (allValidParms) {	// because 1:90:65 will work but it looks silly, 2:31:05 looks better.
    maxTime = hrs*3600 + min*60 + sec*1;            // total seconds to count up to
    if (warn > 0) maxWarn = maxTime - warn*60;      // subtract warning minutes unless warn = 0

    while(sec >= 60) {
        sec = sec-60;
        min++;
        }
    while (min >= 60) {
        min = min-60;
        hrs++;
        }
    }

// if you are counting UP, do you want to start somewhere besides the default of zero?
startUpM = startUpM * 1;	// make sure it is numeric
startUpH = startUpH * 1;
if (startUpM >= 60) {
    startUpM = startUpM - 60;
    startUpH = startUpH + 1;
    }
upHrs = startUpH;
upMin = startUpM;

///////////////////////////////////////////////////////////////////////////////
//  Generate the style sheet, it is javascript only because of the changing
//  font size and the fact that stle sheets do not support variables or arguments.
///////////////////////////////////////////////////////////////////////////////
document.write("<style type=\"text\/css\">");
document.write(".timeClass { ");  			/* for countdown font size */
document.write("  font-family:Arial,Helvetica,sans-serif;");
document.write("  font-size:" + theFontSize+"px;");
document.write("  color:black;");
document.write("  text-align:center;");
document.write("  vertical-align:middle;");
document.write("  margin-top:0px;");
document.write("  margin-bottom:0px;");
document.write("  margin-right:0px;");
document.write("  margin-left:0px;");
document.write("  }");

document.write(".timeClass2 { ");            /* for small seconds */
document.write("  font-family:Arial,Helvetica,sans-serif;");
document.write("  font-size:" + theFontSize2+"px;");
document.write("  color:black;");
document.write("  text-align:center;");
document.write("  margin-top:0px;");
document.write("  margin-bottom:0px;");
document.write("  margin-right:0px;");
document.write("  margin-left:0px;");
document.write("  }");

document.write(".timeClass3 { ");            /* for the overtime counter */
document.write("  font-family:Arial,Helvetica,sans-serif;");
document.write("  font-size:" + theFontSize3+"px;");
document.write("  color:black;");
document.write("  text-align:center;");
document.write("  margin-top:0px;");
document.write("  margin-bottom:0px;");
document.write("  margin-right:0px;");
document.write("  margin-left:0px;");
document.write("  }");
document.write("<\/style>");

if (UpDn == 0) {
    sec++;   // because the first thing the countDown function does is decrement seconds
    window.onload = countDown;	// Howard's first choice, from the starting point down to 00:00
    }
    else {
    upSec--;
    window.onload = countUp;	// Dick Bemis' request, count up to target instead of down
    }

</script>

</head>
<!--
functions and logic are in the head section (above).
Presentation and setup form is in the body of the page (below).
-->
<body>
<script type="text/javascript">
changeBGC(defaultBGColor,99);

///////////////////////////////////////////////////////////////////////////////
//  if it is submitted, with valid values, show the game timer
//  or if autostart is specified, just go for it
///////////////////////////////////////////////////////////////////////////////
if (((whichButton == "Start+the+Timer") && (allValidParms)) || (autoStart) ){
    changeBGC(defaultBGColor,1);

    // table starts
    document.write("<table width=\"100%\" height='" + vertSpace + "' >");

    // start over button
    document.write("<tr><td style=\"text-align:left;width:20%\" ><input type='button' name='startOver' value='Start Over' onclick='startOver()'>");

    // the club name:
    document.write("<td style='text-align:center;font-family:Arial,Helvetica,sans-serif;width:60%;height:30px;font-weight:bold;' >" + defaultClubName + "</td>");

    // pause & resume buttons:
    document.write("<td style=\"text-align:right;width:20%\" ><input type='button' name='pause' value='Pause' onclick='keepGoing=0'>");
    if (UpDn == 0) document.write("<input type='button' name='restart' value='Resume' onclick='keepGoing=1;countDown()'></td></tr>");
    if (UpDn == 1) document.write("<input type='button' name='restart' value='Resume' onclick='keepGoing=1;countUp()'></td></tr>");

    // the countdown clock:
    document.write("<tr><td colspan='3'>");
    document.write("<div id=\"theTime\" class=\"timeClass\"></div>");
    document.write("<div id=\"theTime2\" class=\"timeClass3\"></div>");

    // cell & row & table ends
    document.write("</td></tr></table>");
    }


///////////////////////////////////////////////////////////////////////////////
//	otherwise present a form asking how long the game timer should run
///////////////////////////////////////////////////////////////////////////////
else {
    if (whichButton == "Test+Sound+Volume") {	// only testing the sound here, not running everything
        mySoundTestVol.play().setVolume(testVol);
        defaultVolume = testVol;
        }

    document.write("<table style='margin-left:auto;margin-right:auto;'> ");
    document.write("<form name='pickValues' id='pickValues' action='' method='GET'>");
    document.write("<input type='hidden' name='form_autoStart' value=0>");

    document.write("<tr><td colspan='2' ");
    document.write("style='text-align:center;font-family:Arial,Helvetica,sans-serif;font-weight:bold;'>");
    document.write("Game Timer ver. " + version + " &nbsp; &nbsp; &nbsp; </td></tr>");

    document.write("<tr><td colspan='2'> &nbsp; </td></tr>");

    document.write("<tr><td>Hours to play:</td><td><input type=text name=form_hrs value='" + defaultHrs   + "' size='2' maxlength='2'></td></tr>");
    document.write("<tr><td>Minutes to play:</td><td><input type=text name=form_min value='" + defaultMin + "' size='2' maxlength='2'></td></tr>");
//  seconds input was eliminated in version 1.6a, but left here as it can be useful for testing
//  document.write("<tr><td>Seconds:</td><td><input type=text name=form_sec  value='" + defaultSec +     "' size='2' maxlength='2'></td></tr>");
    document.write("<input type='hidden' name=form_sec value=0>");
    document.write("<tr><td>Warning minutes:</td><td><input type=text name=form_warnMin value='" + defaultWarnMin + "' size='2' maxlength='2'></td></tr>");

    document.write("<tr><td>Count Up or Down?</td><td>");
        if (defaultUpDn == 0) checkDn = "checked"; else checkDn = " ";	// indicates you will count down to zero, used in the form
        if (defaultUpDn == 1) checkUp = "checked"; else checkUp = " ";	// indicates you will count up from zero, used in the form
        document.write("<input type=radio name=form_updn value=0 " + checkDn + ">Down<br>");
        document.write("<input type=radio name=form_updn value=1 " + checkUp + ">Up");
    document.write("</td></tr>");

    document.write("<tr><td>Count Up starting at</td>");
        document.write("<td>Hours:<input type=text name=form_startUpHrs size='2' maxlength='2' value=0> and ");
        document.write("Minutes:<input type=text name=form_startUpMin size='2' maxlength='2' value=0>");
    document.write("</td></tr>");

    document.write("<tr><td>Use Small Seconds?</td><td>");
        if (defaultSmallSecs == 1) { checkSml="checked"; checkLrg = " "; }
        else { checkSml=""; checkLrg = "checked"; }
        document.write("<input type=radio name=form_smallSecs value=1 " + checkSml + ">Small (530 pixels works well)<br>");
        document.write("<input type=radio name=form_smallSecs value=0 " + checkLrg + ">Large (350 pixels works well)");
    document.write("</td></tr>");

    document.write("<tr><td>Clock font size:</td><td>");
    document.write("<input type=text name=form_fontSZ value=" + defaultFontSize + " size='4' maxlength='4'> pixels</td>");

    ///////////////////////////////////////////////////////////////////////////
    //  start sound settings do not ask about sound unless sound is
    //  both available via html5 and buzz.js is present
    ///////////////////////////////////////////////////////////////////////////
    if ((tryToPlaySound) && isDefined("buzz")) {
        if(buzz.isSupported()) {
            document.write("<tr><td>Sound on or off?</td><td>");
                if (defaultSoundOnOff == 0) soundOff = "checked"; else soundOff = " ";
                if (defaultSoundOnOff == 1) soundOn  = "checked"; else soundOn  = " ";
                document.write("<input type=radio name=form_sound value=0 " + soundOff + ">Off<br>");
                document.write("<input type=radio name=form_sound value=1 " + soundOn + ">On<br>");
            document.write("</td></tr>");
            document.write("<tr><td>Sound Volume<br>(0 --&gt; 100)</td>");
            document.write("<td><input type=text name=form_volume value='" + defaultVolume   + "' size='3' maxlength='3'>");

            //	code just to test the sound volume.
            document.write("<tr><td>Sound Volume<br>(0 --&gt; 100)</td>");
            document.write("<td><input type=number name=form_test_volume value='" + defaultVolume   + "' size='3' maxlength='3'>");
            document.write("<input type='submit' tabindex='99' id='focusHere' name='form_whichButton' value='Test Sound Volume'>");
            document.write("</td></tr>");
            }
        }

    document.write("<tr><td colspan='2' style='text-align:center'>");
    document.write("<input type='submit' name='form_whichButton' id='startTheTimer' value='Start the Timer'>");
    document.write(" &nbsp; but <span style='font-weight:bold;'>press f11 first</span>");
    document.write("</td></tr>");

    ///////////////////////////////////////////////////////////////////////////
    //  end sound settings continue with form
    ///////////////////////////////////////////////////////////////////////////
    document.write("<tr><td colspan='2'> &nbsp; </td></tr>");
    document.write("<tr><td colspan='2' style='text-align:center'>");
        document.write("<input name='form_reset_to_default' type='button' value='Reset to defaults' onclick='startOverNoWarning()'>");
    document.write("</td></tr>");

    document.write("<tr><td colspan='2'> &nbsp; </td></tr>");
        document.write("<tr><td colspan='2' style='text-align:center;font-family:Arial,Helvetica,sans-serif;font-weight:bold;'>");
        document.write(defaultClubName);
    document.write("</td></tr>");

    document.write("</form>");
    document.write("</table>");

    ///////////////////////////////////////////////////////////////////////////
    //  end form, start warning & error messages
    ///////////////////////////////////////////////////////////////////////////
    if ((tryToPlaySound) && isDefined("buzz")) {
        if(!buzz.isSupported()) {
            document.write("<p style=text-align:center;>Your browser does not support html5 &lt;audio&gt; tags,");
            document.write(" sound has been disabled.");
            document.write("<br>Sorry, but IE 8 and below on Windows XP just won't cut it.</p>");
            document.write("<p style='text-align:center; color:red;'>bummer dude...</p>");
            document.write("<p style=text-align:center;>Try IE 9+, <span style='font-weight:bold;'>");
            document.write("<a href=\"http://www.mozilla.org/en-US/firefox/fx/#desktop\">Firefox</a>");
            document.write("</span> 3.6+, Opera 10+, Chrome 6+, or Safari 5+.</p>");
            }
        }

    if (!allValidParms && (whichButton == "Start+the+Timer")) {	// somebody entered invalid values
        changeBGC(defaultBGWarnColor,99);
        document.write("<div style='text-align:center;'> ");
        document.write("Sorry, all values must be positive integers or zero.  "); // actual error message
        document.write("<br>Warning Minutes must be less than 60");
        if ((tryToPlaySound) && isDefined("buzz")) {
            if(!buzz.isSupported()) {
                document.write("<br>Sound volume should be from 0 to 100");
                }
            }
        document.write("</div>");
        }

    if (!tryToPlaySound) {
        document.write("<div style='text-align:center;'> ");
        document.write("Sound is disabled by the code default values.");
        document.write("</div>");
        }

    if ( (tryToPlaySound) && (!isDefined("buzz")) )	{
        document.write("<div style='text-align:center;'> ");
        document.write("buzz.js is either missing or corrupt, sound will not play.")
        document.write("</div>");
        }

    // focus on the "Start the Timer" button so you can just hit enter,
    // but only if they are not on a "touch" tablet.
    // Beware of the pop up on screen keyboard if you focus on an input field.
    // If it's a touch screen, the user will probably just poke the button on the screen
    // without using the keyboard.
    if ( !hasTouch() ) document.getElementById('startTheTimer').focus();

    }    // end of else statement for "present a form"

</script>

</body></html>
